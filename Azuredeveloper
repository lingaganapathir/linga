Azure Developer:

coud based platform

metadata: a set of data that describes and gives information about other data.

pre-requisite:
-programming background
-.Net/java
-web application development

softwares:
-VS 2017/2019
-VS code
-local admin rights

Azure Subscription:
-azure free trail for 1 year email,credit card,phonenum

what is cloud computing?
renting resources.
you only pay for what you use.
company which provides these are cloud provider.
cloud provider are responsible for physical hardware.

benefits of cloud coumputing:
  cost effective
  scalable(increase or decrease resources RAM vertically or horizontally)
  elastic(spike or drop in workload demand automatically)
  current(maintaining the software and hardware setup upto date upgrades and setups)
  reliable(cloup provider will take care of our data like backup)
  global(usable all over even out of country)
  secured(physical and digital security)
  
strategies of cloud computing
  SaaS(software as a service) 
       software via internet (MS word in internet without installing) ex:-office365,drop box
  Iaas(infrastructure as a service)
       coumputing(VM),storage, memory, network...
  Paas(platform as a service)  (internally contains IaaS)
       provides an environment for building, testing, and deploying software applications
	   goal is to help in creating an application quickly without managing the underlying infra
       hosting environment, runtime, development, testing, OS
	   
ways to provision resources:
    1.azure portal
	2.powershell
	3.azure cloud shell
	4.ARM templates
	   
Azure Resource Manager(ARM)
  is the deployment and management service for azure
  provides a management layer that enables to create, update resource in azure subscription(PM should approve to use VM)
  we can apply tag(name) to resources (is a metadata)
  
Azure RESOURCE GROUP(ARG)(packages: logical grouping of types(classes))
    creating resourse won't cost any amt
	logical container which holds related resource that need to be managed as a grp
    azure resources formed in a group that can be used
	collection of azure resources
	is a logical container
	we have to decide which resource needed in grp
	every resource in resource grp will have same life cycle
	we can add or remove resource to a resource grp
	we can move a rsource from one resource to another grp

Azure AVAILABILITY ZONE:(like data center)
  are physically seperate location within an azure region(azure region:collectionof availability zone)
  if one gets destroyed another availability zone in same azure region will have the back up data
  
TO access azure portal:4 ways  
  Azure portal : don't have automation
  windows powershell: (automation) windows cmd
  azure cloud shell: automation in portal itself (portal cmd) 
  azure SDKs: is available for languages 

Azure VIRTUAL MACHINE:(IaaS)(compute service)
1.VN(virtual ntwrk) 
2.subnet
3.NIC(ntwrk interface card)
4.Public IP
5.NSG(kind of firewall which network can come in)
  we can install anything
  don't need hardware
  any OS can be used
  VM will always be inside subnet it may be autogenerated to manual setup
  if NIC has public IP outside world can access you if private can't
  by default have local:C/ disk 
  we can enable diagnotic logs(monitoring) we have to pay
  physical SSD on host: temporory disk if we restart data will be lost  
  IP by default are dynamic and charged for static IP
VM size will determine RAM , data disk, 
Storage: two disk
         VHD(virtual hard disks)(standard(low charged) or premium(charged))
            disk that stores the OS
            temperory storage			
			
Creating VM:

  after creating we can open by 1.click on connect 
                                2.copy public IP and win+R search for mstsc (RDB connection) now put the IP
  If we know the IP we can conect to VM from any other network if it is running by default, all ntw allowed, to restrict change in NSG
  To install: server manger->add roles and features->
  in portal VM-NSG->inbound security rules->HTTP(add)
To open LINUX:  
  MobaXterm open it and put your IP in remote host
To shutdown LINUX:
  sudo halt
To stop VM:
  click on stop button "stopped(deallocated)"
If you shutdown in VM:
  VM will be shutdown but public IP will be present so you will cost
To delete VM:
 click on delete button even after deleteing the OS disk(some resourses) will available we can use the disks in new VM if needed
 if the disk is not need we have to delete it manually to avoid cost for storage
 
 
Disk storages:
  managed (internal storage is manged by service provider)
  unmanaged  (managed by ourself)
Ultra SSD highest capacity 4 to 64GB VM only in availability zone
premium SSD next tier 
standard SSD
standard HDD

OS storage  max 2048Gb
Temperory storage drive is D:
Data storage max 4095GB
  
when you don't need a data disk we can detach it
it will remove from VM but not from storage so we can reuse it

To attach a data disk to VM:
  in portal->settings->disks->add data disk->create disk->source type "none"
  to use it in VM we need to MOUNT it(only at first): server manager->ALL Servers->file and storage services->disks->selectthe disk->new volume->next->
  to DETACH: in portal->select the disk->edit->click ... ->detach->save
  but will present in resource grp
  to attach that disk in diff VM: in VM2->disks->add data disk->select->save
  to resize a data disk: 

Horizontally scale:(size of disk)
  adding additonal data disks(no need to switch off VM)
     in portal->disks->add disk->create->save(when creating a data disk it should be in same region but can be in diff resource grp where the RG can be in diff region)
  increasing capacity of data/OS disk:
     diskname->config->[size](can be changed only when detached or unattached)
     have to be mounted again
vertically scale:(size of VM)
  setting->size->select the required VM->(click)resize
  VM will restart
  
Azure custom image:(managed VM image)(new VM can be created in same region only)
  snapshot of the OS,other software,disks in the VM
  before creating image, GENERIALIZE the VM(sysprep.exe/generalize/shutdown/oobe)(removing security) we are shutting down and deallocating
  after generalizing VM can't be used again we can only use it for imaging
  to generialize:in VM cmd->c:\windows\System32\Sysprep->execute sysprep.exe->generalize->shutdown
  to capture:after generalizing capture in portal will be enabled->name the image->put in RG(any)->automatically deallocated->zone resillency->off

Backup VM:
  backing up not only OS and data disk VM config also backup
  backup extension is always in windows and linux. this extension backup the entire VM
  wecan set back up policy set time to backup everyday
  default protection policy run backup each day and retain for 30days we shedule custom defined policy
  backup extension takes a storage lvl snapshot and the data is transferred to the vault after that snapshot is removed, recovery policy is created
to backup:
  create a VM
  create a RG
  create a recovery sevices vault in the RG: search for recoveryservicevault->add->same RG->provide a vault name->select any region-> tag->create
        gotoresource->backuppolicy->default policy->(click) modify to edit the default time/zone
  backup goal:portal->backup->  ->add->select VM->enablebackup
  :in VM->backup->backupnow->specify the date->ok

Powershell: (do it in VM)
  extended windows cmd is (ISE)[search in task bar]
  azures cmd is powershell install on top of ISE
  To install powershell in VM:
    To check version: in ISE> $PSVersionTable.PSVersion
    run the first line from the file to enable https protocaol to dwn package to install powershell
    run the second line to install AZ module
    To install AZ module run the third line
    Import-Module AZ
	
	search in google for azure powershell script to add/remove resource
	Connect-AZAccount  ->will get you all subscriptions
    Get-AZSuscription    -> will give list all subscritions
	Get-AZContext    -> will give active subscription
	Get-AZResourceGroup | Format-Table    ->will give all subs and we can also create
    
Azure availability set:(to acheive availability in single data centre)
  availability set is a logical grping 1.fault domain(physical) 2.update domain(logical/maintenance)
  VM is proficient in seperate rack
  by default 2 fault(rack) domain will be provided [1st VM in 1st rack and 2nd VM in 2nd rack 3rd VM in 1st rack]
  To create availability set: in powershell put-> New-AZAvailabilitySet -ResourceGroupName {RGname}-Name MyAvailabilitySet -Location {location}-platformUpdateDomainCount 5 -platformFaultDomainCount 2
            in portal: search availability set-> add->name->select no of fault domains->

creating webservers:
  while creating VM select availability set->select HTTP nd RDP in select inbound->next->networking->public IP(none)->nxt->custom defined script
  To create public IP: search public IP in portal->give name->dynamic->any RG->same locatin->create
  To associate IP with VM:go to VM->ntwrk->network interface->ip config->select ipconfig1->select public IP->save
  
Load balancer:(putting rules manually)
  1.public load balancer  (have default public IP)
  2.internal load balancer (doesn't have public IP)
  To create load balancer :search load balancer->add->select RG->name->same region->type public->SKU basic->create
    front IP config->      
	backendpool->add->name->select VN->associate to VM->add->select VMs->add
    To create probes: healthprobe->add->name->http->path[/]->ok
    To put rules:load balancing rules->add->name->protocal TCP->ok 

ARM templates:
  Two modes to re-deploy 1.incremental(which are new and values are changed will change in target RG)
                         2.complete(resource not present will be deleted)
  Is expresed in JSON format
    parameters are input to the ARM template(values)\_ same in java
	variables(nicName,addressPrefix,subnetName,subnetPrefix....)                                     /
    resources(disk, subnet...)is a array of objt
   
  readymade ARM template already exits in github,create in VS also. 
TO create a Arm template: 
  dwnload it from github
  by default in powershell mode is incremental to change it to complete (--Mode complete)
  Deploy ARM templ using powershell ISE: go to folder in poweshell->New-AzRsourceGroupDeployment -TemplateFile ./{name_of_dwnloaded_file}
  Deploy ARM templ using portal:search template->add->name->description->ok->copy paste the json in it->add->select the template->deploy->fill->validate

Azure storage:
  blob (image,video,VM image,DB)
  file (similar to blob, we can mount this storage as a drive)
  table (structured data)
  queue (store & retrive msg)
  
  by default encryption at REST(during storing not during transmitting data)
  
  blob storge tier:1.hot tier (frequent access) access data is cost effective but storage cost is higher
                   2.cool tier (infrequent access) large amt of storage,storing is cost effective but accessing is higher
				   3.archive tier (access time is high) for individual block blobs, storing is most cost effective but accessing is more costly than hot or cool tier

    replication(copies)
       (write is always done in primary region)  
        LRS(local redundant storage) data is replicated within multiple sever rack within single datacenter
		ZRS(zone) replicates across multiple AZ in a region
		GRS(geo ) replicated across diff regions but only accessable when azure makes disaster or failover
				  PRIMARY REGION(LRS)
			      SECONDARY REGION(LRS)
		GZRS(geo zone) 
	               PRIMARY REGION(ZRS)
			       SECONDARY REGION(LRS) is choosen by azure
		RA-GRS(read access geo) same as GRS
	                            PRIMARY REGION(LRS)
			                    SECONDARY REGION(LRS) we can shoose read only from secondary only
		RA-GZRS(read access geo zone ) same as GZRS
  
  file share:
       server message block
	   windows , mac, linux can directly mount azure file share
       sharing data across multiple VM
	   To create:in storage acct->file share->add->spefy the size ->create
       click on connect-> copy the folder link , usname,password
	   To mount:in VM->right on This PC->map ntwrk drive->paste folder link check the two box->uname,password
	   
SAS(shared access signature)
	authenticated(access keys) , anonymous user
		1.user makes a request to a web application
		2.web app connects to azure and request as SAS
		3.the web app sends the SAS to the user
		4.user access resouces using the SAS
	
	To create SAS key: write code in azurestorgeapp->create a storage acct->containers->new container->add some blob in it->settings->access keys->copy conetion string->paste in CloudStorageAccount.parse("")->now run the program in azurestorageapp->then we can get the SAS key

Azure App Services:(Paas from azure) have to pay for app service
	web apps (web application and services)
	mobile apps (mobile apps)
	API apps (REST APIs)
	logic apps (windows workflow foundations(WF/WWF))
	function apps(azure functions)(serverless apps means we don't need manage servers)
	
	scaling
	authentication & authorized
	hybrid connectvity
	support & troubleshoot
	
	web app:
		used to host web app
		deploy your web into a web app service
		can have custom domains-
		deploymwent slots
		auto scaling
		authentication & authorized
		traffic mangement
    Creating web app:serach in portal for appservices->add->unique name->publish code->runtime java->windows->app service plan create new->create 
	
	ways to deploy web app into "azue web app" app sevices
		1.using visual studio (webdeploy/msdeploy)
		2.local or remote git deployment
		3.use one drive/drop box deployment
		Admin
		4.zip/war file deployemnt
		5.FTP/FTPs
			FTP client -->file zilla
		6.azure CLI or powershell
	
	To get username and password: portal->get publish profile
	URL is in appservice
	1.visual studio:
		right click on the code->publish->app service->select->ok->publish->
    2.FTP:
		enable FTP in the app sevice:app service->config->general settings-> FTP state FTPS only
		publish the web application using VS to a local folder:right click on code->publish->new->folder->select (MyAzurewebAPp)->create->publish
		copy the folder and paste in VM desktop
		obtain the credentials:app service->deployment ciner->FTp->dashboard->app credentials->copy FTPS endpoint, uname and password 
		using an FTP client, upload the artifact to azure web app create a storage acct
		install filezill in VM->open filezilla->select the folder->put the FTPS end point in host,usename->select the entire file the folder->right click->upload
	3.zip/war:
		publish the web application using VS to a local folder
		go into the publisher folder, select a the files and send them to a zipped folder
		go into the KUDU portal/console of the wen app: in the url add".scm." between application name and web site name->tools->zip publish deploy->drag and drop the .zip in the kudu portal
    
	deployment slots:
		another version of web app running in the same app service plan
		create a slot:app service->select your webapp->deployment slots->add->create->
		app sevices->configuration->app setings->connection strings->

web jobs:10th video(is associated with web app)
	web job = web app(even web job is not triggered we are cost for web app)
	background process
	webjob can listen to sources like blob,queue,... all of these can trigger a webjob to perform some action.

Azure functions:(similar to web job)
	pay only when we use
	PaaS offering
	server less piece of code
	stand alone improved equivalent of azure webjobs
	application can be triggered by varuious triggers
	
	Function App will contain number of function
	each function will have code 
	                        trigger(HTTP req,new queue msg,new blob msg,...)
							input binding
							output binding(table storage,blob storage,...)
	Create functionapp in portal: search functinapp->add->RG->fApp name->code->region->storageacct->plan type->create
	                              go into fApp->function->add->select type of trigger->create
								  config->

Logic App:(JSON)
	workflow-based applications
	ex:user apply for leave
	   email is sent to RH
	   Rh accepts/rejects the leave
	   user is able to see the final status of the leave app
	connectors(do the job of sending email)
	To create:search logic app-> add->

SQL server is a collection of SQL DB
	SQLserver->add->unique name->networking yes
SQL DB
	SQL DB->add->unique name->select SQLserver

azure key vault:(like repo where we can save secret)
	cryptographic keys
	 password
	To create: search key vault->add->unique name->soft delete(deleted things can be recoverd in 90 days)enable->access policy

Monitoring
	azure monitor service
		metrics (cpu usage ,how many req are there)
		alerts
		application logging
	configure monitoring 
		1.metrics
		2.alerts
		3.application log
			To create app log:
			To create web sevice log: In webapp->app service log->application logging(on)->web sever logging(file system)->save
		
Application Insight:
	its a more enhanced wy of monitoring web apps
	its integrated with azure monitor
	separate resourse and is charged
	Multiple web apps can use a single App insights resource
	1.enable applicgtion insights(default enabled)
		a.using the portal(at the app service level)
		b.using code(SDK)((web app level)(can inform azure if exception is handled)
		
Azure API management:
	REST services (architectural)| SOAP service(protocol)
	JSON over any                |  xml over html
	designed for HTTP            |  client has SOAP aware
	
	1.layer of abstraction over the backend services
	2.Offload authentication/SSL
	3.Transformation (request/response)
	4.centralized logging and monitoring mechanism
	5.REST as wll as SOAP based services
	6.Service Migrations
		
		1.create API management service
		2.add backend API: In portal API-> APIs->add API->copy URL from "docs.microsoft.com"
		3.Test an operation from the portal
		4.navigate to the developer portal 
			policies:
				API level
					applies to all operations in the API
				Operation
					applies only a specific operations
				Product
					applies to all APIs in the product










































